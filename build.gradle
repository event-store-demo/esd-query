buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:2.0.1.RELEASE"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'spring-cloud-contract'
apply plugin: 'io.spring.dependency-management'

group 'io.pivotal.dmfrey'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/plugins-release" }
    maven { url "https://repo.spring.io/plugins-milestone" }
}

ext {
    springCloudVersion = 'Finchley.SR1'
}

dependencies {

    // Spring dependencies
    compile('org.springframework.kafka:spring-kafka')


    // Spring Boot dependencies
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('org.springframework.boot:spring-boot-starter-security')


    // Spring Cloud dependencies
    compile('org.springframework.cloud:spring-cloud-stream-binder-rabbit')
    compile('org.springframework.cloud:spring-cloud-stream-binder-kafka-core')
    compile('org.springframework.cloud:spring-cloud-stream-binder-kafka-streams')

    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry')

    compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
    compile('io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker')

    compile('org.springframework.cloud:spring-cloud-starter-sleuth')

    compile('org.springframework.cloud:spring-cloud-starter-openfeign')
    compile('io.github.openfeign:feign-httpclient')


    // Third-party dependencies
    compile('com.rabbitmq:amqp-client:5.2.0')
    compile('io.vavr:vavr:0.9.2')

    annotationProcessor(
            [group: 'org.projectlombok', name: 'lombok', version: '1.16.20'],
    )
    compile('org.projectlombok:lombok:1.16.20')

    // Test dependencies
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile('org.springframework.cloud:spring-cloud-starter-contract-verifier')
    testCompile('org.springframework.cloud:spring-cloud-starter-contract-stub-runner')
    testCompile('org.springframework.kafka:spring-kafka-test')
    testCompile('org.springframework.cloud:spring-cloud-stream-binder-test')

}

dependencyManagement {

    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom 'org.springframework.cloud:spring-cloud-contract-dependencies:2.0.1.RELEASE'
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:2.0.1.RELEASE"
    }

}

contracts {

    basePackageForTests = 'io.pivotal.dmfrey.eventStoreDemo'
    packageWithBaseClasses = 'io.pivotal.dmfrey.eventStoreDemo.contracts'

}
